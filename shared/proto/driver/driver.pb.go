// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0--rc3
// source: driver.proto

package driver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Location      *Location              `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Geohash       string                 `protobuf:"bytes,3,opt,name=geohash,proto3" json:"geohash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{0}
}

func (x *Driver) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Driver) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Driver) GetGeohash() string {
	if x != nil {
		return x.Geohash
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float32                `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32                `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type FindNearbyDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      *Location              `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyDriversRequest) Reset() {
	*x = FindNearbyDriversRequest{}
	mi := &file_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyDriversRequest) ProtoMessage() {}

func (x *FindNearbyDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyDriversRequest.ProtoReflect.Descriptor instead.
func (*FindNearbyDriversRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{2}
}

func (x *FindNearbyDriversRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type StreamDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NearbyDrivers []*Driver              `protobuf:"bytes,1,rep,name=nearby_drivers,json=nearbyDrivers,proto3" json:"nearby_drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDriversResponse) Reset() {
	*x = StreamDriversResponse{}
	mi := &file_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDriversResponse) ProtoMessage() {}

func (x *StreamDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDriversResponse.ProtoReflect.Descriptor instead.
func (*StreamDriversResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{3}
}

func (x *StreamDriversResponse) GetNearbyDrivers() []*Driver {
	if x != nil {
		return x.NearbyDrivers
	}
	return nil
}

var File_driver_proto protoreflect.FileDescriptor

const file_driver_proto_rawDesc = "" +
	"\n" +
	"\fdriver.proto\x12\x06driver\"m\n" +
	"\x06Driver\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12,\n" +
	"\blocation\x18\x02 \x01(\v2\x10.driver.LocationR\blocation\x12\x18\n" +
	"\ageohash\x18\x03 \x01(\tR\ageohash\"D\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x02R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x02R\tlongitude\"H\n" +
	"\x18FindNearbyDriversRequest\x12,\n" +
	"\blocation\x18\x01 \x01(\v2\x10.driver.LocationR\blocation\"N\n" +
	"\x15StreamDriversResponse\x125\n" +
	"\x0enearby_drivers\x18\x01 \x03(\v2\x0e.driver.DriverR\rnearbyDrivers2i\n" +
	"\rDriverService\x12X\n" +
	"\x11FindNearbyDrivers\x12 .driver.FindNearbyDriversRequest\x1a\x1d.driver.StreamDriversResponse(\x010\x01B\x1cZ\x1ashared/proto/driver;driverb\x06proto3"

var (
	file_driver_proto_rawDescOnce sync.Once
	file_driver_proto_rawDescData []byte
)

func file_driver_proto_rawDescGZIP() []byte {
	file_driver_proto_rawDescOnce.Do(func() {
		file_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)))
	})
	return file_driver_proto_rawDescData
}

var file_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_driver_proto_goTypes = []any{
	(*Driver)(nil),                   // 0: driver.Driver
	(*Location)(nil),                 // 1: driver.Location
	(*FindNearbyDriversRequest)(nil), // 2: driver.FindNearbyDriversRequest
	(*StreamDriversResponse)(nil),    // 3: driver.StreamDriversResponse
}
var file_driver_proto_depIdxs = []int32{
	1, // 0: driver.Driver.location:type_name -> driver.Location
	1, // 1: driver.FindNearbyDriversRequest.location:type_name -> driver.Location
	0, // 2: driver.StreamDriversResponse.nearby_drivers:type_name -> driver.Driver
	2, // 3: driver.DriverService.FindNearbyDrivers:input_type -> driver.FindNearbyDriversRequest
	3, // 4: driver.DriverService.FindNearbyDrivers:output_type -> driver.StreamDriversResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_driver_proto_init() }
func file_driver_proto_init() {
	if File_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_proto_goTypes,
		DependencyIndexes: file_driver_proto_depIdxs,
		MessageInfos:      file_driver_proto_msgTypes,
	}.Build()
	File_driver_proto = out.File
	file_driver_proto_goTypes = nil
	file_driver_proto_depIdxs = nil
}
